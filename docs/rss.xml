<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>小黄酱酱的博客</title><link>https://SaVeop.github.io</link><description>life sucks, but you're gonna love it!</description><copyright>小黄酱酱的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://64.media.tumblr.com/54b7962c7fd7415a23501b01350a55e5/8589f1f7b7748eb0-be/s1280x1920/3384ef8a7a026ae58bef6492082a148db1af4912.jpg</url><title>avatar</title><link>https://SaVeop.github.io</link></image><lastBuildDate>Sun, 15 Dec 2024 14:29:32 +0000</lastBuildDate><managingEditor>小黄酱酱的博客</managingEditor><ttl>60</ttl><webMaster>小黄酱酱的博客</webMaster><item><title>学习笔记：2024-12-15</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-15.html</link><description>#### **一、TCP连接与生活比喻**&#13;
&#13;
#### **1. 什么是 TCP 连接？**&#13;
&#13;
- TCP（传输控制协议）是一种可靠的、面向连接的通信协议。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-15.html</guid><pubDate>Sun, 15 Dec 2024 14:29:10 +0000</pubDate></item><item><title>学习笔记：2024-12-14</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-14.html</link><description>### **学习笔记：2024-12-14**&#13;
&#13;
------&#13;
&#13;
### **1. `@JsonFormat` 注解的使用**&#13;
&#13;
- **作用：** `@JsonFormat` 用于指定 JSON 序列化和反序列化时的格式。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-14.html</guid><pubDate>Sat, 14 Dec 2024 17:26:10 +0000</pubDate></item><item><title>学习笔记：2024-12-13</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-13.html</link><description>### **学习笔记：2024-12-13**&#13;
&#13;
------&#13;
&#13;
### 1. **Spring Cache 与 `@CachePut` 注解**&#13;
&#13;
- **`@CachePut` 注解** 用于方法执行后，将方法的返回值放入缓存中，而不是从缓存中获取数据。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-13.html</guid><pubDate>Fri, 13 Dec 2024 13:33:21 +0000</pubDate></item><item><title>学习笔记：2024-12-12</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-12.html</link><description>### **学习笔记：2024-12-12**&#13;
&#13;
------&#13;
&#13;
#### **1. 打印 `InputStream` 的内容**&#13;
&#13;
**问题背景：**&#13;
在代码中获取 HTTP 响应内容时，想打印 `InputStream` 内容，但直接打印流对象只输出其地址信息。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-12.html</guid><pubDate>Thu, 12 Dec 2024 14:27:33 +0000</pubDate></item><item><title>学习笔记：2024-12-11</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-11.html</link><description>### **学习笔记：2024-12-11**&#13;
&#13;
------&#13;
&#13;
- #### **一、静态变量与静态方法的理解**&#13;
&#13;
  ##### 1. **静态（`static`）成员的定义和访问**：&#13;
&#13;
  - **静态变量（`static` field）** 和 **静态方法（`static` method）** 是属于 **类** 本身的，而不是属于 **类的实例**。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-11.html</guid><pubDate>Wed, 11 Dec 2024 13:22:47 +0000</pubDate></item><item><title>学习笔记：2024-12-10</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-10.html</link><description>### **学习笔记：2024-12-10**&#13;
&#13;
------&#13;
&#13;
#### 1. **事务配置及使用**&#13;
&#13;
- **事务注解的使用**：&#13;
  使用 `@Transactional` 注解来标识需要进行事务管理的方法或类，通常是在 **service 层**。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-10.html</guid><pubDate>Tue, 10 Dec 2024 16:45:52 +0000</pubDate></item><item><title>学习笔记：2024-12-09</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-09.html</link><description>### 学习笔记：2024-12-09&#13;
&#13;
------&#13;
&#13;
#### **1. AOP（面向切面编程）**&#13;
&#13;
- **切面表达式**：&#13;
  - AOP 中的切点表达式格式为：`execution([修饰符模式] 返回类型模式 [声明类型模式] 方法名模式(参数模式) [throws模式])`。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-09.html</guid><pubDate>Mon, 09 Dec 2024 14:48:41 +0000</pubDate></item><item><title>学习笔记：2024-12-08</title><link>https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-08.html</link><description>### **学习笔记：2024-12-08**&#13;
&#13;
------&#13;
&#13;
#### **1. 静态资源加载路径**&#13;
&#13;
- **问题**：`addResourceHandlers` 方法配置的静态资源路径（如 `classpath:/META-INF/resources/`）在项目中找不到。</description><guid isPermaLink="true">https://SaVeop.github.io/post/xue-xi-bi-ji-%EF%BC%9A2024-12-08.html</guid><pubDate>Sun, 08 Dec 2024 17:43:05 +0000</pubDate></item><item><title>HI</title><link>https://SaVeop.github.io/post/HI.html</link><description>第一篇博客一定要写点什么吗......呆住。</description><guid isPermaLink="true">https://SaVeop.github.io/post/HI.html</guid><pubDate>Thu, 05 Dec 2024 16:50:02 +0000</pubDate></item></channel></rss>